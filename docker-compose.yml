services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      lagoon.type: postgres

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/postgres_service
      SECRET_KEY: "dKq2BK3pqGQfNqC7SK8ZxNCdqJnGV4F9"  # More secure key for development
      ENV_SUFFIX: "local"
    ports:
      - "8800:8800"
    volumes:
      - ./app:/app/app
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      lagoon.type: python

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    command:
      - "npm"
      - "run"
      - "dev"
    volumes:
      - ./frontend:/app
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8800
    labels:
      lagoon.type: node

  litellm:
    image: ghcr.io/berriai/litellm-database:main-latest
    ports:
      - "4000:4000" # Map the container port to the host, change the host port if necessary
    environment:
        DATABASE_URL: "postgresql://llmproxy:dbpassword9090@litellm_db:5432/litellm"
        STORE_MODEL_IN_DB: "True" # allows adding models to proxy via UI
        LITELLM_MASTER_KEY: "sk-1234"
    depends_on:
      - litellm_db  # Indicates that this service depends on the 'db' service, ensuring 'db' starts first
    healthcheck:  # Defines the health check configuration for the container
      test: [ "CMD", "wget", "--spider", "--quiet", "http://localhost:4000/health/liveliness", "||", "exit", "1" ]  # Command to execute for health check
      interval: 30s  # Perform health check every 30 seconds
      timeout: 10s   # Health check command times out after 10 seconds
      retries: 3     # Retry up to 3 times if health check fails
      start_period: 40s  # Wait 40 seconds after container start before beginning health checks
    labels:
      lagoon.type: none

  litellm_db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: llmproxy
      POSTGRES_PASSWORD: dbpassword9090
    volumes:
      - litellm_postgres_data:/var/lib/postgresql/data  # Persists Postgres data across container restarts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10
    labels:
      lagoon.type: none


volumes:
  postgres_data:
  litellm_postgres_data:
    name: litellm_postgres_data  # Named volume for Postgres data persistence